# All pins are specified using Broadcom BPIO pin numbers.
# Caution: BCM pin names changed between rev 1 and 2 boards.
# Good references here:
#   https://raspberrypi.stackexchange.com/questions/12966/what-is-the-difference-between-board-and-bcm-for-gpio-pin-numbering
#   https://www.raspberrypi-spy.co.uk/2012/09/raspberry-pi-board-revisions/

[system]
log_verbose: true

[servo]
# Configuration for a continuous rotation servo controlled
# through the Pi's PWM pin.

# the PWM pin on the Pi that will control the servo.
servo_pin: 18

# The PWM setting to keep the servo still.
pwm_still: 150

# This quantity will be added or subracted to the
# "still" value to make the servo turn. For my hardware
# 10 seems to be a good number. 100 is the outer limit (I think.)
crank_speed: 10

# time to turn the crank to dispense food (in seconds.)
crank_time: 2.4

[button]
# Configuration for a manual push button to activate the servo.

# the GPIO pin that will be connected to the button.
button_pin: 23

[lcd]
# configuration for a 16x2 Hitachi HD44780 (comptatible) LCD controller.
# squeakernet uses the 4-bit programming mode, so only six pins in total are required.

# Register Set
lcd_rs_pin: 4

# Enable
lcd_e_pin: 17

# data pins 4 through 7.
lcd_d4_pin: 21
lcd_d5_pin: 22
lcd_d6_pin: 10
lcd_d7_pin: 9
